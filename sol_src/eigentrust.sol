// SPDX-License-Identifier: GPL-3.0

pragma solidity ^0.6.0;
pragma experimental ABIEncoderV2;


contract eigenTrust
{
	address 					deployerAddress;
	uint 						recomendedAlpha;

	int[][] 					s;
	bool[] 						p;
	address[] 					users;

// EVENTS DEFINITIONS //////////////////////////////////////////
	event NewUser(
		uint 		index,
		address 	user
	);

	event Vote(
		address 	from,
		address 	to,
		bool 		vote
	);
////////////////////////////////////////////////////////////////



// ALPHA VALUES ////////////////////////////////////////////////
//   0% : 0
//   1% : 1157920892373161978339780513971733211662131231773844678227620746821023825920
//   2% : 2315841784746323956679561027943466423324262463547689356455241493642047651840
//   3% : 3473762677119485734152086009541415192241132152676208719407488017613967065088
//   4% : 4631683569492647913359122055886932846648524927095378712910482987284095303680
//   5% : 5789604461865810092566158102232450501055917701514548706413477956954223542272
//   6% : 6947525354238971468304172019082830384482264305352417438814976035227934130176
//   7% : 8105446246612134450980230194923485809870703250352888693419467896294480019456
//   8% : 9263367138985295826718244111773865693297049854190757425820965974568190607360
//   9% : 10421288031358457202456258028624245576723396458028626158222464052841901195264
//  10% : 11579208923731620185132316204464901002111835403029097412826955913908447084544
//  11% : 12737129816104781560870330121315280885538182006866966145228453992182157672448
//  12% : 13895050708477942936608344038165660768964528610704834877629952070455868260352
//  13% : 15052971600851105919284402214006316194352967555705306132234443931522414149632
//  14% : 16210892493224268901960460389846971619741406500705777386838935792588960038912
//  15% : 17368813385597428670760430047707075961205660763381043597037440088069835325440
//  16% : 18526734277970591653436488223547731386594099708381514851641931949136381214720
//  17% : 19684655170343754636112546399388386811982538653381986106246423810202927104000
//  18% : 20842576062716914404912516057248491153446792916057252316444928105683802390528
//  19% : 22000496955090077387588574233089146578835231861057723571049419966750348279808
//  20% : 23158417847463240370264632408929802004223670806058194825653911827816894169088
//  21% : 24316338739836400139064602066789906345687925068733461035852416123297769455616
//  22% : 25474259632209563121740660242630561771076364013733932290456907984364315344896
//  23% : 26632180524582726104416718418471217196464802958734403545061399845430861234176
//  24% : 27790101416955885873216688076331321537929057221409669755259904140911736520704
//  25% : 28948022309329048855892746252171976963317496166410141009864396001978282409984
//  26% : 30105943201702211838568804428012632388705935111410612264468887863044828299264
//  27% : 31263864094075374821244862603853287814094374056411083519073379724111374188544
//  28% : 32421784986448537803920920779693943239482813001411554773677871585177920077824
//  29% : 33579705878821694358844801919573496497022882581761615939470388315073124761600
//  30% : 34737626771194857341520860095414151922411321526762087194074880176139670650880
//  31% : 35895547663568020324196918271254807347799760471762558448679372037206216540160
//  32% : 37053468555941183306872976447095462773188199416763029703283863898272762429440
//  33% : 38211389448314346289549034622936118198576638361763500957888355759339308318720
//  34% : 39369310340687509272225092798776773623965077306763972212492847620405854208000
//  35% : 40527231233060672254901150974617429049353516251764443467097339481472400097280
//  36% : 41685152125433828809825032114496982306893585832114504632889856211367604781056
//  37% : 42843073017806991792501090290337637732282024777114975887494348072434150670336
//  38% : 44000993910180154775177148466178293157670463722115447142098839933500696559616
//  39% : 45158914802553317757853206642018948583058902667115918396703331794567242448896
//  40% : 46316835694926480740529264817859604008447341612116389651307823655633788338176
//  41% : 47474756587299643723205322993700259433835780557116860905912315516700334227456
//  42% : 48632677479672800278129204133579812691375850137466922071704832246595538911232
//  43% : 49790598372045963260805262309420468116764289082467393326309324107662084800512
//  44% : 50948519264419126243481320485261123542152728027467864580913815968728630689792
//  45% : 52106440156792289226157378661101778967541166972468335835518307829795176579072
//  46% : 53264361049165452208833436836942434392929605917468807090122799690861722468352
//  47% : 54422281941538615191509495012783089818318044862469278344727291551928268357632
//  48% : 55580202833911771746433376152662643075858114442819339510519808281823473041408
//  49% : 56738123726284934729109434328503298501246553387819810765124300142890018930688
//  50% : 57896044618658097711785492504343953926634992332820282019728792003956564819968
//  51% : 59053965511031260694461550680184609352023431277820753274333283865023110709248
//  52% : 60211886403404423677137608856025264777411870222821224528937775726089656598528
//  53% : 61369807295777586659813667031865920202800309167821695783542267587156202487808
//  54% : 62527728188150749642489725207706575628188748112822167038146759448222748377088
//  55% : 63685649080523912625165783383547231053577187057822638292751251309289294266368
//  56% : 64843569972897075607841841559387886478965626002823109547355743170355840155648
//  57% : 66001490865270238590517899735228541904354064947823580801960235031422386044928
//  58% : 67159411757643388717689603839146992994045765163523231878940776630146249523200
//  59% : 68317332650016551700365662014987648419434204108523703133545268491212795412480
//  60% : 69475253542389714683041720190828303844822643053524174388149760352279341301760
//  61% : 70633174434762877665717778366668959270211081998524645642754252213345887191040
//  62% : 71791095327136040648393836542509614695599520943525116897358744074412433080320
//  63% : 72949016219509203631069894718350270120987959888525588151963235935478978969600
//  64% : 74106937111882366613745952894190925546376398833526059406567727796545524858880
//  65% : 75264858004255529596422011070031580971764837778526530661172219657612070748160
//  66% : 76422778896628692579098069245872236397153276723527001915776711518678616637440
//  67% : 77580699789001855561774127421712891822541715668527473170381203379745162526720
//  68% : 78738620681375018544450185597553547247930154613527944424985695240811708416000
//  69% : 79896541573748181527126243773394202673318593558528415679590187101878254305280
//  70% : 81054462466121344509802301949234858098707032503528886934194678962944800194560
//  71% : 82212383358494494636974006053153309188398732719228538011175220561668663672832
//  72% : 83370304250867657619650064228993964613787171664229009265779712422735209562112
//  73% : 84528225143240820602326122404834620039175610609229480520384204283801755451392
//  74% : 85686146035613983585002180580675275464564049554229951774988696144868301340672
//  75% : 86844066927987146567678238756515930889952488499230423029593188005934847229952
//  76% : 88001987820360309550354296932356586315340927444230894284197679867001393119232
//  77% : 89159908712733472533030355108197241740729366389231365538802171728067939008512
//  78% : 90317829605106635515706413284037897166117805334231836793406663589134484897792
//  79% : 91475750497479798498382471459878552591506244279232308048011155450201030787072
//  80% : 92633671389852961481058529635719208016894683224232779302615647311267576676352
//  81% : 93791592282226124463734587811559863442283122169233250557220139172334122565632
//  82% : 94949513174599287446410645987400518867671561114233721811824631033400668454912
//  83% : 96107434066972450429086704163241174293060000059234193066429122894467214344192
//  84% : 97265354959345600556258408267159625382751700274933844143409664493191077822464
//  85% : 98423275851718763538934466443000280808140139219934315398014156354257623711744
//  86% : 99581196744091926521610524618840936233528578164934786652618648215324169601024
//  87% : 100739117636465089504286582794681591658917017109935257907223140076390715490304
//  88% : 101897038528838252486962640970522247084305456054935729161827631937457261379584
//  89% : 103054959421211415469638699146362902509693894999936200416432123798523807268864
//  90% : 104212880313584578452314757322203557935082333944936671671036615659590353158144
//  91% : 105370801205957741434990815498044213360470772889937142925641107520656899047424
//  92% : 106528722098330904417666873673884868785859211834937614180245599381723444936704
//  93% : 107686642990704067400342931849725524211247650779938085434850091242789990825984
//  94% : 108844563883077230383018990025566179636636089724938556689454583103856536715264
//  95% : 110002484775450393365695048201406835062024528669939027944059074964923082604544
//  96% : 111160405667823543492866752305325286151716228885638679021039616563646946082816
//  97% : 112318326560196706475542810481165941577104667830639150275644108424713491972096
//  98% : 113476247452569869458218868657006597002493106775639621530248600285780037861376
//  99% : 114634168344943032440894926832847252427881545720640092784853092146846583750656
// 100% : 115792089237316195423570985008687907853269984665640564039457584007913129639936
////////////////////////////////////////////////////////////////


	constructor() public
	{
		deployerAddress				= msg.sender;

		recomendedAlpha 			= 11579208923731620185132316204464901002111835403029097412826955913908447084544;

		add_user(msg.sender);

		p[0] = true;
	}


// ADD FUNCTIONS //////////////////
	function add_user(address a) public returns(int) // must be private or restricted
	{
		require(is_user(a) == -1, "User already initialized");

		users.push(a);

		s.push();
		for(uint i = 0 ; i < s.length - 1 ; i++)
		{
			s[i].push();
			s[s.length-1].push();
		}
		s[s.length-1].push();

		p.push(false);

		uint 	index = users.length - 1;
		emit NewUser(index, a);
		return (int(index));
	}

	function add_user() public returns(int)
	{
		return add_user(msg.sender);
	}

	function add_preTrusted(address a) public
	{
		add_preTrusted(is_user(a));
	}

	function add_preTrusted(int index) private
	{
		require(is_preTrusted(msg.sender),"User not pre trusted");
		
		require(index >= 0 && uint(index) < users.length, "User not initialized");
		p[uint(index)] = true;
	}
///////////////////////////////////


// IS? FUNCTIONS //////////////////
	function is_user(address a) private view returns(int)
	{
		for(uint i = 0 ; i < users.length ; i++)
		{
			if (users[i] == a)
			{
				return int(i);
			}
		}
		return -1;
	}

	function is_preTrusted(address a) private view returns(bool)
	{
		return is_preTrusted(is_user(a));
	}

	function is_preTrusted(int index) private view returns(bool)
	{
		require(index >= 0 && uint(index) < users.length, "User not initialized");
		return p[uint(index)];
	}
///////////////////////////////////


// GETTERS ////////////////////////
	function get_p() public view returns(bool[] memory)
	{
		return p;
	}

	function get_s() public view returns(int[][] memory)
	{
		return s;
	}

	function get_users() public view returns(address[] memory)
	{
		return users;
	}

	function get_alpha() public view returns(uint)
	{
		return recomendedAlpha;
	}
///////////////////////////////////


// SETTERS ////////////////////////
	function set_alpha(uint newAlpha) public view returns(uint)
	{
		require(is_preTrusted(msg.sender),"User not pre trusted");
		recomendedAlpha = newAlpha;
	}
///////////////////////////////////


// VOTING FUNCTIONS ///////////////
	function vote(address from, address to, bool v) public // must be private
	{
		require(from != to, "Seriously !!!");

		int 	fromIndex = is_user(from);
		require(fromIndex != -1, "User not initialized");
		int 	toIndex = is_user(to);

		if (toIndex == -1)
		{
			toIndex = add_user(to);
		}
		s[uint(fromIndex)][uint(toIndex)] += v ? int(1) : int(-1);
		emit Vote(from, to, v);
	}

	function vote(address to, bool v) public
	{
		vote(msg.sender, to, v);
	}
///////////////////////////////////

}